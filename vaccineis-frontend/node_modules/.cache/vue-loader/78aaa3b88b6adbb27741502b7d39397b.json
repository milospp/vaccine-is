{"remainingRequest":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/src/components/RegistrationForm.vue?vue&type=style&index=0&id=ad48d266&scoped=true&lang=css&","dependencies":[{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/src/components/RegistrationForm.vue","mtime":1645046447982},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/css-loader/dist/cjs.js","mtime":1645051473441},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645051467501},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/postcss-loader/src/index.js","mtime":1645051469561},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1645051474149},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/vue-loader/lib/index.js","mtime":1645051467429}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpmb3JtIHsKICAgIG1hcmdpbi10b3A6IDIwcHg7Cn0KaW5wdXQgewogICAgb3V0bGluZTogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQ6ICNkM2QzZDM7CiAgICBmb250LWZhbWlseTogVGFob21hOwp9CmxhYmVsIHsKICAgIGZvbnQtZmFtaWx5OiBUYWhvbWE7Cn0KLmJ0biB7CiAgICBtYXJnaW46IGF1dG87CiAgICBkaXNwbGF5OiBibG9jazsKfQo="},{"version":3,"sources":["RegistrationForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegistrationForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<form @submit.prevent=\"registration\">\n    <div class=\"modal-body text-start\">\n        <div class=\"form-group\">\n            <input v-model=\"user.ime\" type=\"text\" class=\"form-control\" placeholder=\"Име\"/>\n            <div class=\"invalid-feedback\">Невалидно име.</div>\n        </div>\n        <div class=\"form-group\">\n            <input v-model=\"user.prezime\" type=\"text\" class=\"form-control\" placeholder=\"Презиме\"/>\n            <div class=\"invalid-feedback\">Невалидно презиме.</div>\n        </div>\n        <div class=\"form-group\">\n            <input v-model=\"user.jmbg\" type=\"text\" class=\"form-control\" placeholder=\"Јмбг / ЕБС\"/>\n            <div class=\"invalid-feedback\">Невалидан јмбг.</div>\n        </div>\n        <div class=\"form-group\">\n            <input v-model=\"user.email\" type=\"text\" class=\"form-control\" placeholder=\"Имејл\"/>\n            <div class=\"invalid-feedback\">Невалидан имејл.</div>\n        </div>\n        <div class=\"form-group\">\n            <input v-model=\"user.sifra\" type=\"password\" class=\"form-control\" placeholder=\"Лозинка\"/>\n            <div class=\"invalid-feedback\">Невалидна лозинка.</div>\n        </div>\n    </div>\n\n    <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary\">Региструј се</button>\n    </div>\n</form>\n</template>\n\n<script>\nimport AuthenticationService from \"@/service/AuthenticationService.js\";\nimport xmljs from \"xml-js\";\n\n\nexport default {\n    name: \"RegistrationForm\",\n\n    data() {\n        return {\n            user: {\n                ime: \"\",\n                prezime: \"\",\n                jmbg: \"\",\n                email: \"\",\n                sifra: \"\"\n            },\n        };\n    },\n\n    methods: {\n        registration() {\n            console.log(xmljs);\n\n            let data = \"<UserRegistrationDTO>\" + xmljs.json2xml(this.user, {compact: true, spaces: 4}) + \"</UserRegistrationDTO>\";\n\n            console.log(data);\n            AuthenticationService.register(data)\n                .then(response => { \n                    console.log(xmljs.xml2json(response));\n                })\n        },\n\n        toast(message, type) {\n        this.$toasted.show(message, {\n            type: type,\n            theme: \"toasted-primary\",\n            position: \"top-center\",\n            duration: 3000,\n        });\n        },\n    },\n};\n</script>\n\n<style scoped>\nform {\n    margin-top: 20px;\n}\ninput {\n    outline: none;\n    border-radius: 5px;\n    border: none;\n    background: #d3d3d3;\n    font-family: Tahoma;\n}\nlabel {\n    font-family: Tahoma;\n}\n.btn {\n    margin: auto;\n    display: block;\n}\n</style>"]}]}