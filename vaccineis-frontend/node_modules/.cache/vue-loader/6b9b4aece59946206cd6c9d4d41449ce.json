{"remainingRequest":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/src/components/DigitalGreenCertificateForm.vue?vue&type=template&id=007c04a0&scoped=true&","dependencies":[{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/src/components/DigitalGreenCertificateForm.vue","mtime":1645044904264},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1645051474149},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1645051467513},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1645051474149},{"path":"/home/dalibor/Desktop/vaccine-is/vaccineis-frontend/node_modules/vue-loader/lib/index.js","mtime":1645051467429}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}